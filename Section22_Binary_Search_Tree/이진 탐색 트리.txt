# 학습 목표

 1. 트리의 정의

 2. 트리와 배열, 연결 리스트와 비교

 3. 트리와 이진 트리, 이진 탐색 트리의 차이

 4. 이진 탐색 트리와 연산 구현

# 트리란?

 - 연결 리스트처럼 노드로 이루어진 데이터 구조

 - 부모 / 자식 관계가 있고 가지를 가지는 구조

 - 각 노드는 여러 항목의 자식 노드를 가리킬 수 있음

 - 연결 리스트: 선형, 트리: 비선형

 - 트리는 형제나 부모를 가리키지 않고 출발점은 단 한개임

# 트리에서 사용되는 용어

 - 루트 = 트리의 최상위 노드는

 - 자식 = 루트에서 멀어지는 방향으로 연결된 노드

 - 부모 = 자식 노드를 가지는 노드

 - 형제 = 같은 부모를 가지는 노드

 - 리프 = 자식이 없는 노드

 - 간선 = 한 노드에서 다른 노드를 연결하는 화살표

# 트리의 실사용 예시

 - HTML DOM (문서 객체 모델)

 - 네트워크 라우팅

 - 추상 구문 트리

 - 인공지능

 - 운영체제의 폴더 시스템

 - JSON

# 이진 트리

 - 각 노드가 최대 2개의 자식만 가지는 트리

# 이진 탐색 트리 (BST)

 - 이진 트리와 비슷하지만 노드가 정렬되어 있는 트리

 - 부모 노드의 왼쪽에 있는 모든 노드는 언제나 부모보다 작음

 - 부모 노드의 오른쪽에 있는 모든 노드는 언제나 부모보다 큼

 - BST는 탐색에 최적화 되어있음 => 탐색할 때 마다 트리를 반으로 쪼개기 때문
