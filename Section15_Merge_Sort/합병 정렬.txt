# 중급 정렬 알고리즘(Intermediate Sorting Algorithms)

# 학습 목표

 1. 기본 정렬 알고리즘의 한계 이해

 2. 합병 정렬(merge sort) 구현

 3. 퀵 정렬(quick sort) 구현

 4. 지수 정렬(radix sort) 구현


# 중급 정렬 알고리즘을 배우는 이유

 - 기본 정렬 알고리즘은 큰 규모에 맞지 않음

 - (예) 1만개 요소를 버블 정렬로 작업하면 꽤 많은 시간이 걸림

 - (예) 1만개 요소를 합병 정렬로 작업하면 짧은 시간만으로 충분


# 빠른 정렬 알고리즘은

 - 빠른 정렬 알고리즘 들은 시간 복잡도 O(n^2)에서 O(n log n)으로 향상

 - 효율성과 단순성은 상충한다

 - 이 효율적인 알고리즘은 더 어렵고, 더 길고, 길지않아도 더 이상함


# 합병 정렬

 - 합병과 정렬이라는 두 가지 조합

 - 0개의 요소, 1개 요소 배열이 이미 정렬되어 있다는 점을 활용

 - 배열을 더 작은 배열로 나누는 방식 ( 0이나 1요소 배열이 될 때 까지 진행 )

(예시)
[ 8, 3, 5, 4, 7, 6, 1, 2 ] =>

[ 8, 3, 5, 4 ], [ 7, 6, 1, 2 ] =>

[ 8, 3 ], [ 5, 4 ], [ 7, 6 ], [ 1, 2 ] =>

[ 8 ], [ 3 ], [ 5 ], [ 4 ], [ 7 ], [ 6 ], [ 1 ], [ 2 ] =>

[ 3, 8 ], [ 4, 5 ], [ 6, 7 ], [ 1, 2 ] =>

[ 3, 4, 5, 8 ], [ 1, 2, 6, 7 ] =>

[ 1, 2, 3, 4, 5, 6, 7, 8 ]
